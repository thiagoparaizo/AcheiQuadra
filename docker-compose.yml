# ARQUIVO: docker-compose.yml
version: '3.8'

services:
  backend:
    build: ./backend
    restart: always
    volumes:
      - ./backend:/app
      - ./backend/static:/app/static
    environment:
      - MONGODB_URL=mongodb://mongo:27017/
      - MONGODB_DB=achei_quadras_db
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM=${MAIL_FROM}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      - PAYMENT_GATEWAY_API_KEY=${PAYMENT_GATEWAY_API_KEY}
      - PAYMENT_GATEWAY_SECRET=${PAYMENT_GATEWAY_SECRET}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
    depends_on:
      - mongo
    networks:
      - app-network

  frontend:
    build: ./frontend
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - NODE_ENV=${ENVIRONMENT:-development}
    ports:
      - '3000:3000'
    depends_on:
      - backend
    networks:
      - app-network

  mongo:
    image: mongo:latest
    restart: always
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=achei_quadras_db
    ports:
      - '27017:27017'
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/static:/var/www/static
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./nginx/webroot:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email ${ADMIN_EMAIL} --agree-tos --no-eff-email --staging -d ${DOMAIN}

volumes:
  mongo-data:
  certbot-etc:
  certbot-var:

networks:
  app-network:
    driver: bridge
